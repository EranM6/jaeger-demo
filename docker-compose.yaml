version: "3.8"
services:
    service-1:
        container_name: trigger
        build:
            context: ./service-1
            dockerfile: ../Dockerfile
        image: trigger:latest
        ports:
            - "8080:8080"
        restart: unless-stopped
        environment:
            - JAEGER_AGENT_HOST=jaeger
            - JAEGER_AGENT_PORT=6831
        networks:
            - jaeger-example
    service-2:
        container_name: animal
        build:
            context: ./service-2
            dockerfile: ../Dockerfile
        image: animal:latest
        expose:
            - "9000"
        restart: unless-stopped
        environment:
            - JAEGER_AGENT_HOST=jaeger
            - JAEGER_AGENT_PORT=6831
        networks:
            - jaeger-example
    service-3:
        container_name: scientist
        build:
            context: ./service-3
            dockerfile: ../Dockerfile
        image: scientist:latest
        expose:
            - "8090"
        restart: unless-stopped
        environment:
            - JAEGER_AGENT_HOST=jaeger
            - JAEGER_AGENT_PORT=6831
        networks:
            - jaeger-example
    jaeger:
        container_name: jaeger
        image: jaegertracing/all-in-one:1.38
        ports:
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
            - "16686:16686"
            - "4317:4317"
            - "4318:4318"
            - "14250:14250"
            - "14268:14268"
            - "14269:14269"
            - "9411:9411"
        environment:
            - COLLECTOR_ZIPKIN_HOST_PORT=:9411
            - COLLECTOR_OTLP_ENABLED=true
        networks:
            - jaeger-example

    prom:
        container_name: scraper
        image: prom/prometheus:latest
        ports:
            - "9090:9090"
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
        volumes:
            - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        networks:
            - jaeger-example
    grafana:
        container_name: viewer
        image: grafana/grafana:latest
        ports:
            - "3000:3000"
        volumes:
            - ./config/grafana:/etc/grafana/provisioning/datasources
            - grafana_data:/var/lib/grafana
        networks:
            - jaeger-example
networks:
    jaeger-example:
        driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}